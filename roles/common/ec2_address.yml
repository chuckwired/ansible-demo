---
# Playbook to gather login details of an EC2 instance; will create
# a file called "{instance_name}_address" containig the public name.
#
# To be used as an include yaml, using the vars:
#  - instance_name: name of the EC2 instance 
#  - ssh_name: name of the .pem ssh file
#  - ssh_location: location of the .pem file
#
# TODO: Ensure that we get the correct instance information, in case there are multiple with the same name tag!
  - shell: aws ec2 describe-instances --filters Name=tag:Name,Values="{{instance_name}}"
    changed_when: False
    register: instance_info
    # NEED TO REWRITE THIS TO BE FAULT TOLERANT v
  - name: Find the public DNS name for the instance
    shell: echo {{ (instance_info.stdout|from_json).Reservations[0].Instances[0].PublicDnsName }}
    changed_when: False
    register: ec2_address
  - name: Wait for server to restart
    wait_for:
      host={{ ec2_address.stdout }}
      port=22
      delay=1
      timeout=300
    # Test connection to the instance
  - shell: ssh -i {{ssh_location}}{{ssh_name}}.pem ec2-user@{{ ec2_address.stdout }}
    register: ssh_to_ec2_instance
    # TODO: Remove me when the /etc/ansible/hosts works
  - shell: echo {{ ec2_address.stdout }} > {{ instance_name }}.server
    when: ssh_to_ec2_instance|success
  # Now we need to edit the /etc/ansible/hosts for the {instance_address}.server entry
  # 1. Find the line number if exists
  - shell: grep {{ instance_name }}.server /etc/ansible/hosts
    register: grep_server_name
    failed_when: "'FAILED' in grep_server_name.stderr" # might be better to test if file exists, then ignore errors
  # 2a. If exists, replace line
  - shell: grep -n {{ instance_name }}.server /etc/ansible/hosts | cut -b 1
    when: "'{{instance_name}}.server' in grep_server_name.stdout"
    register: server_line_number
  - shell: sed -i '' '{{ server_line_number.stdout }}s/.*/{{ instance_name }}.server ansible_connection={{ ec2_address.stdout }}/' /etc/ansible/hosts
    when: "'{{instance_name}}.server' in grep_server_name.stdout"
  # 2b. If not exists, just add to the bottom of file
  - shell: echo "{{ instance_name }}.server ansible_connection={{ ec2_address.stdout }}" >> /etc/ansible/hosts
    when: server_line_number|skipped
